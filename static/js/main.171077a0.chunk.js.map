{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/shared.js","actions/authedUser.js","components/AuthNav.js","components/Auth.js","utils/helpers.js","components/Question.js","components/Unansweredq.js","components/Home.js","components/Navig.js","components/Addq.js","components/Leaderboard.js","components/Error.js","components/Vote.js","components/Skeleton.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","info","qid","answer","_saveQuestionAnswer","GET_USERS","GET_QUESTIONS","ADD_QUESTION","ADD_ANSWER","addAnswer","type","handleAddQuestion","dispatch","getState","showLoading","then","addQuestion","hideLoading","handleAddAnswer","catch","e","console","warn","alert","handleInitialData","all","getUsers","getQuestions","SET_AUTHED_USER","REMOVE_AUTHED_USER","setAuthedUser","removeAuthedUser","AuthNav","redirect","props","location","this","history","pathname","Navbar","bg","variant","style","marginTop","height","Brand","fontSize","Image","src","alt","width","marginLeft","marginRight","Nav","className","activeKey","Link","as","NavLink","to","onClick","Component","connect","withRouter","Auth","state","selectedUser","selectUser","setState","logIn","preventDefault","from","push","userId","map","user","Container","fluid","Card","Title","Img","Body","Row","display","justifyContent","alignItems","Col","md","Dropdown","Toggle","backgroundColor","Menu","overflowY","maxHeight","Item","roundedCircle","Divider","Button","disabled","Object","values","votesOne","length","votesTwo","avatar","userVoteOne","userVoteTwo","totalVotes","Question","marginBottom","border","Subtitle","span","offset","fontWeight","Unansweredq","Home","unansQs","ansQs","Tabs","fill","defaultActiveKey","Tab","eventKey","title","keys","filter","q","includes","sort","a","b","Navig","logOut","Addq","changeOptionOne","target","value","changeOptionTwo","submitPoll","Header","Text","Form","Group","controlId","Control","placeholder","onChange","Leaderboard","showDetails","usersList","ListGroup","index","Badge","pill","rounded","textAlign","score","numberAsked","numberAnswered","Error","document","getElementById","margin","Vote","chooseOption","submitVote","error","voteOnePer","toFixed","voteTwoPer","userVote","borderRadius","paddingLeft","ProgressBar","striped","label","max","onSubmit","Check","showResult","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","match","params","question_id","undefined","MyLoader","speed","viewBox","foregroundColor","x","y","rx","ry","App","isLoading","loading","Skeleton","path","component","combineReducers","action","loadingBar","loadingBarReducer","logger","store","next","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render"],"mappings":"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","file":"static/js/main.171077a0.chunk.js","sourcesContent":["let users = {\n  sarahedo: {\n    id: \"sarahedo\",\n    name: \"Sarah Edo\",\n    avatarURL: 'https://i.postimg.cc/cJz4MCct/3.jpg',\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n      \"am8ehyc8byjqgar0jgpub9\": \"optionTwo\",\n      \"loxhs1bqm25b708cmbf3g\": \"optionTwo\",\n    },\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\n  },\n  tylermcginnis: {\n    id: \"tylermcginnis\",\n    name: \"Tyler McGinnis\",\n    avatarURL: 'https://i.postimg.cc/s39QbJX1/2.jpg',\n    answers: {\n      \"vthrdm985a262al8qx3do\": \"optionOne\",\n      \"xj352vofupe1dqz9emx13r\": \"optionTwo\",\n    },\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\n  },\n  johndoe: {\n    id: \"johndoe\",\n    name: \"John Doe\",\n    avatarURL: 'https://i.postimg.cc/K8Zzmdzj/1.jpg',\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": \"optionOne\",\n      \"vthrdm985a262al8qx3do\": \"optionTwo\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n    },\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\n  },\n};\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: \"8xf0y6ziyjabvozdd253nd\",\n    author: \"sarahedo\",\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: [\"sarahedo\"],\n      text: \"have horrible short term memory\",\n    },\n    optionTwo: {\n      votes: [],\n      text: \"have horrible long term memory\",\n    },\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: \"6ni6ok3ym7mf1p33lnez\",\n    author: \"johndoe\",\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: \"become a superhero\",\n    },\n    optionTwo: {\n      votes: [\"johndoe\", \"sarahedo\"],\n      text: \"become a supervillain\",\n    },\n  },\n  am8ehyc8byjqgar0jgpub9: {\n    id: \"am8ehyc8byjqgar0jgpub9\",\n    author: \"sarahedo\",\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: \"be telekinetic\",\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be telepathic\",\n    },\n  },\n  loxhs1bqm25b708cmbf3g: {\n    id: \"loxhs1bqm25b708cmbf3g\",\n    author: \"tylermcginnis\",\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: \"be a front-end developer\",\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be a back-end developer\",\n    },\n  },\n  vthrdm985a262al8qx3do: {\n    id: \"vthrdm985a262al8qx3do\",\n    author: \"tylermcginnis\",\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: [\"tylermcginnis\"],\n      text: \"find $50 yourself\",\n    },\n    optionTwo: {\n      votes: [\"johndoe\"],\n      text: \"have your best friend find $500\",\n    },\n  },\n  xj352vofupe1dqz9emx13r: {\n    id: \"xj352vofupe1dqz9emx13r\",\n    author: \"johndoe\",\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: [\"johndoe\"],\n      text: \"write JavaScript\",\n    },\n    optionTwo: {\n      votes: [\"tylermcginnis\"],\n      text: \"write Swift\",\n    },\n  },\n};\n\nfunction generateUID() {\n  return (\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  );\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000);\n  });\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    },\n  };\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion,\n      };\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\n        },\n      };\n\n      res(formattedQuestion);\n    }, 1000);\n  });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer,\n          },\n        },\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser]),\n          },\n        },\n      };\n\n      res();\n    }, 500);\n  });\n}\n","import {\n    _getUsers,\n    _getQuestions,\n    _saveQuestion,\n    _saveQuestionAnswer\n} from './_DATA.js'\n\nexport function getInitialData () {\n    return Promise.all([\n      _getUsers(),\n      _getQuestions(),\n    ]).then(([users, questions]) => ({\n      users,\n      questions,\n    }))\n  }\n  \n  export function saveQuestion (info) {\n    return _saveQuestion(info)\n  }\n  \n  export function saveQuestionAnswer (info) {\n    return _saveQuestionAnswer(info)\n  }","export const GET_USERS = \"GET_USERS\";\n\n//action creator\nexport function getUsers(users) {\n  return {\n    type: GET_USERS,\n    users,\n  };\n}\n","import { saveQuestion, saveQuestionAnswer } from \"../utils/api\";\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\n\n//action types\nexport const GET_QUESTIONS = \"GET_QUESTIONS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const ADD_ANSWER = \"ADD_ANSWER\";\n\n//action creators\nexport function getQuestions(questions) {\n  return {\n    type: GET_QUESTIONS,\n    questions,\n  };\n}\n\nfunction addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question,\n  };\n}\n\nfunction addAnswer({ authedUser, qid, answer }) {\n  return {\n    type: ADD_ANSWER,\n    authedUser,\n    qid,\n    answer,\n  };\n}\n\n// Async action creators\nexport function handleAddQuestion(optionOne, optionTwo) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState();\n\n    dispatch(showLoading());\n\n    return saveQuestion({\n      author: authedUser,\n      optionOneText: optionOne,\n      optionTwoText: optionTwo,\n    })\n      .then((question) => dispatch(addQuestion(question)))\n      .then(() => dispatch(hideLoading()));\n  };\n}\n\nexport function handleAddAnswer(info) {\n  return (dispatch) => {\n    dispatch(addAnswer(info)); //optimitic update\n\n    return saveQuestionAnswer(info).catch((e) => {\n      console.warn(\"Error in handlingAddingAnswer: \", e);\n      dispatch(addAnswer(info));\n      alert(\"There was an error submitting your answer, please try again.\");\n    });\n  };\n}\n","import { getInitialData } from \"../utils/api\";\nimport { getUsers } from \"../actions/users\";\nimport { getQuestions } from \"../actions/questions\";\nimport { showLoading, hideLoading } from \"react-redux-loading\";\n//before getInitialData we showLoading, and after getting data we invoke hide loading\n\n//thunk action creator\nexport function handleInitialData() {\n  return (dispatch) => {\n    dispatch(showLoading());\n    return getInitialData() //this will get users and questions data\n      .then(({ users, questions }) => {\n        //we want to add those to redux store\n        dispatch(getUsers(users));\n        dispatch(getQuestions(questions));\n        //we'll set up reducers for these to handle their dispatches (modify based on their actions)\n        //cuz we're returning a function, we have to use thunk middleware\n        dispatch(hideLoading());\n      });\n  };\n}\n","export const SET_AUTHED_USER = \"SET_AUTHED_USER\";\nexport const REMOVE_AUTHED_USER = \"REMOVE_AUTHED_USER\";\n\nexport function setAuthedUser(id) {\n  return {\n    type: SET_AUTHED_USER,\n    id,\n  };\n}\n\nexport function removeAuthedUser() {\n  return {\n    type: REMOVE_AUTHED_USER,\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navbar, Nav, Image } from \"react-bootstrap\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    authedUser,\n  };\n}\n\nclass AuthNav extends Component {\n  redirect = () => {\n    if (!this.props.authedUser) {\n      alert(\"You have to sign in first!\");\n    }\n  };\n\n  render() {\n    const location = this.props.history.location.pathname;\n\n    return (\n      <Navbar\n        id=\"navig\"\n        bg=\"primary\"\n        variant=\"dark\"\n        style={{ marginTop: \"5px\", height: \"65px\" }}\n      >\n        <Navbar.Brand style={{ fontSize: \"30px\" }}>\n          <Image\n            src=\"https://i.postimg.cc/B6dbsbLf/wydpic.png\"\n            alt=\"website-logo\"\n            style={{\n              width: \"100px\",\n              height: \"60px\",\n              marginLeft: \"40px\",\n              marginRight: \"10px\",\n            }}\n          />\n          Welcome!\n        </Navbar.Brand>\n        <Nav\n          className=\"text-center m-auto\"\n          style={{ fontSize: \"25px\" }}\n          activeKey={\n            location === \"/home\" || location === \"/\"\n              ? \"/home\"\n              : location === \"/add\"\n              ? \"/add\"\n              : location === \"/leaderboard\"\n              ? \"/leaderboard\"\n              : \"/home\"\n          }\n        >\n          <Nav.Link\n            as={NavLink}\n            to=\"/home\"\n            onClick={this.redirect}\n            style={{ marginRight: \"50px\" }}\n          >\n            Home\n          </Nav.Link>\n          <Nav.Link\n            as={NavLink}\n            to=\"/add\"\n            onClick={this.redirect}\n            style={{ marginRight: \"50px\" }}\n          >\n            Add Poll\n          </Nav.Link>\n          <Nav.Link\n            as={NavLink}\n            to=\"/leaderboard\"\n            onClick={this.redirect}\n            style={{ marginRight: \"50px\" }}\n          >\n            Leaderboard\n          </Nav.Link>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(withRouter(AuthNav));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setAuthedUser } from \"../actions/authedUser\";\nimport {\n  Container,\n  Card,\n  Button,\n  Row,\n  Col,\n  Dropdown,\n  Image,\n} from \"react-bootstrap\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport AuthNav from \"./AuthNav\";\n\nfunction mapStateToProps({ users }) {\n  return {\n    users: Object.values(users),\n  };\n} //getting the users data array with the their values\n\nclass Auth extends Component {\n  state = { selectedUser: null };\n\n  //when a user is selected from the list, we take the id in set the value in our state\n  selectUser = (id) => {\n    this.setState({ selectedUser: id });\n  };\n\n  logIn = (e) => {\n    e.preventDefault();\n\n    const { selectedUser } = this.state;\n    const { dispatch } = this.props;\n\n    //with access to withRouter, to get the url the user wanted to navigate to\n    const from = this.props.history.location.pathname;\n\n    //if a user signed in, we redirect user to the home page\n    if (selectedUser) {\n      dispatch(setAuthedUser(selectedUser));\n      if (from === \"/\") {\n        this.props.history.push(\"/home\");\n      }\n      //if the user tried to access a page before signing in,\n      //the user will be required to sign in then redirected to the desired page\n    } else if (from !== \"/\") {\n      return <Redirect to={from} />;\n    }\n  };\n\n  render() {\n    const { users } = this.props;\n    const { selectedUser } = this.state;\n\n    //to link the userId to their name in the dropdown select\n    const userId = users.map((user) => user.id);\n\n    return (\n      <div style={{ marginTop: \"5px\" }}>\n        <AuthNav />\n        <Container fluid className=\"text-center m-auto\">\n          <Card className=\"m-auto\" style={{ height: \"90vh\" }}>\n            <Card.Title style={{ marginTop: \"20px\" }}></Card.Title>\n            <Card.Img\n              variant=\"top\"\n              className=\"m-auto\"\n              style={{ width: \"22rem\" }}\n              src=\"https://i.postimg.cc/B6dbsbLf/wydpic.png\"\n            />\n            <Card.Body>\n              <footer className=\"blockquote-footer\">\n                You have to sign in to play the game.\n              </footer>\n              <Row\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginTop: \"30px\",\n                }}\n              >\n                <Col md=\"auto\">\n                  <Dropdown>\n                    <Dropdown.Toggle\n                      variant=\"light\"\n                      style={{ width: \"200px\", backgroundColor: \"#e3e1e1\" }}\n                    >\n                      {!selectedUser ? (\n                        <span>Select a user</span>\n                      ) : selectedUser === userId[0] ? (\n                        <span>Sarah Edo</span>\n                      ) : selectedUser === userId[1] ? (\n                        <span>Tyler McGinnis</span>\n                      ) : selectedUser === userId[2] ? (\n                        <span>John Doe</span>\n                      ) : null}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu\n                      style={{ overflowY: \"scroll\", maxHeight: \"140px\" }}\n                    >\n                      {users.map((user) => (\n                        <Dropdown.Item\n                          key={user.id}\n                          onClick={(e) => {\n                            this.selectUser(user.id);\n                          }}\n                        >\n                          <div>\n                            <Image\n                              src={user.avatarURL}\n                              style={{\n                                width: \"45px\",\n                                height: \"45px\",\n                                marginRight: \"5px\",\n                              }}\n                              roundedCircle\n                            />\n                            {user.name}\n                            <Dropdown.Divider />\n                          </div>\n                        </Dropdown.Item>\n                      ))}\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n                <Col md=\"auto\">\n                  <Button\n                    type=\"submit\"\n                    disabled={selectedUser === null}\n                    onClick={this.logIn}\n                  >\n                    Login\n                  </Button>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(withRouter(Auth));\n","  export function formatQuestion (question, author) {\n    const { id, timestamp } = question\n    const { name, avatarURL } = author\n    const optionOne = question.optionOne.text\n    const optionTwo = question.optionTwo.text\n    const votesOne = question.optionOne.votes.length\n    const votesTwo = question.optionTwo.votes.length\n    const userVoteOne = question.optionOne.votes\n    const userVoteTwo = question.optionTwo.votes\n    const totalVotes = votesOne + votesTwo\n\n    return {\n      id,\n      name: name,\n      timestamp,\n      avatar: avatarURL,\n      author,\n      optionOne,\n      optionTwo,\n      votesOne,\n      votesTwo,\n      userVoteOne,\n      userVoteTwo,\n      totalVotes\n      }\n    }\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { formatQuestion } from \"../utils/helpers\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\n//passing id as props in the 2nd argument\nfunction mapStateToProps({ authedUser, users, questions }, { id }) {\n  const question = questions[id];\n  return {\n    authedUser,\n    question: formatQuestion(question, users[question.author], authedUser),\n  };\n}\n\nclass Question extends Component {\n  render() {\n    const { question } = this.props;\n\n    // console.log(\"Answered questions: \", this.props);\n\n    //destructuring\n    const { id, name, avatar, optionOne, optionTwo } = question;\n\n    return (\n      <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n        <Card style={{ width: \"40rem\" }} border=\"primary\" className=\"m-auto\">\n          <Card.Body>\n            <Row className=\"align-items-center justify-content-md-center\">\n              <Col md=\"auto\">\n                <img\n                  src={avatar}\n                  alt={`Avatar of ${name}`}\n                  width=\"90\"\n                  height=\"90\"\n                  style={{ marginTop: \"50px\", marginBottom: \"20px\" }}\n                />\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  {name} is asking:\n                </Card.Subtitle>\n              </Col>\n              <Col md={{ span: 6, offset: 2 }}>\n                <Card.Title style={{ marginTop: \"5px\" }} className=\"mb-2\">\n                  Would your rather\n                </Card.Title>\n                <Button\n                  variant=\"outline-dark\"\n                  disabled\n                  style={{\n                    fontWeight: \"bold\",\n                    marginTop: \"20px\",\n                    marginBottom: \"10px\",\n                  }}\n                >\n                  {optionOne}\n                </Button>\n                <Card.Title>Or</Card.Title>\n                <Button\n                  variant=\"outline-dark\"\n                  disabled\n                  style={{ fontWeight: \"bold\", display: \"block\" }}\n                >\n                  {optionTwo}\n                </Button>\n              </Col>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Button\n                  as={NavLink}\n                  to={`/questions/${id}`}\n                  variant=\"danger\"\n                  style={{ marginTop: \"35px\" }}\n                >\n                  Show Poll\n                </Button>\n              </div>\n            </Row>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Question);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { formatQuestion } from \"../utils/helpers\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport { NavLink } from 'react-router-dom'\n\nfunction mapStateToProps({ authedUser, users, questions }, { id }) {\n  const question = questions[id];\n  return {\n    id,\n    authedUser,\n    question: formatQuestion(question, users[question.author], authedUser),\n  };\n}\n\nclass Unansweredq extends Component {\n  render() {\n    const { question } = this.props;\n    // console.log(\"Unanswered questions: \", this.props);\n\n    //destructuring\n    const { id, name, avatar, optionOne, optionTwo } = question;\n\n    return (\n      <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n        <Card style={{ width: \"40rem\" }} border=\"primary\" className=\"m-auto\">\n          <Card.Body>\n            <Row className=\"align-items-center justify-content-md-center\">\n              <Col md=\"auto\">\n                <img\n                  src={avatar}\n                  alt={`Avatar of ${name}`}\n                  width=\"90\"\n                  height=\"90\"\n                  style={{ marginTop: \"50px\", marginBottom: \"20px\" }}\n                />\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  {name} is asking:\n                </Card.Subtitle>\n              </Col>\n              <Col md={{ span: 6, offset: 2 }}>\n                <Card.Title style={{ marginTop: \"5px\" }} className=\"mb-2\">\n                  Would your rather\n                </Card.Title>\n                <Button\n                  variant=\"outline-dark\"\n                  disabled\n                  style={{\n                    fontWeight: \"bold\",\n                    marginTop: \"20px\",\n                    marginBottom: \"10px\",\n                  }}\n                >\n                  {optionOne}\n                </Button>\n                <Card.Title>Or</Card.Title>\n                <Button\n                  variant=\"outline-dark\"\n                  disabled\n                  style={{ fontWeight: \"bold\", display: \"block\" }}\n                >\n                  {optionTwo}\n                </Button>\n              </Col>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Button\n                  as={NavLink}\n                  to={`/questions/${id}`}\n                  style={{ marginTop: \"35px\" }}\n                  variant=\"danger\"\n                >\n                  Take Poll\n                </Button>\n              </div>\n            </Row>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Unansweredq);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Question from \"./Question\";\nimport Unansweredq from \"./Unansweredq\";\nimport { Tabs, Tab } from \"react-bootstrap\";\n\nfunction mapStateToProps({ authedUser, questions }) {\n  return {\n    //unanswered questions by filtering through the questions that don't include the\n    //authedUser ID in the votes array of optionOne and OptionTwo, and then sorting them\n    unansQs: Object.keys(questions)\n      .filter(\n        (q) =>\n          !questions[q].optionOne.votes.includes(authedUser) &&\n          !questions[q].optionTwo.votes.includes(authedUser)\n      )\n      .sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n\n    //answered questions by filtering through the questions that does have the\n    //authedUser ID in the votes array of optionOne or OptionTwo, and then sorting them\n    ansQs: Object.keys(questions)\n      .filter(\n        (q) =>\n          questions[q].optionOne.votes.includes(authedUser) ||\n          questions[q].optionTwo.votes.includes(authedUser)\n      )\n      .sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n  };\n}\n\nclass Home extends Component {\n  render() {\n    const { unansQs, ansQs } = this.props;\n\n    // console.log('unanswered: ', unansQs)\n    // console.log('answered: ', ansQs)\n\n    return (\n      <Tabs\n        fill\n        defaultActiveKey=\"unanswered\"\n        style={{ marginTop: \"5px\", fontSize: \"20px\" }}\n      >\n        <Tab eventKey=\"unanswered\" title=\"Unanswered Polls\">\n          {unansQs.map((id) => (\n            <div key={id}>\n              <Unansweredq id={id} />\n            </div>\n          ))}\n        </Tab>\n        <Tab eventKey=\"answered\" title=\"Answered Polls\">\n          {ansQs.map((id) => (\n            <div key={id}>\n              <Question id={id} />\n            </div>\n          ))}\n        </Tab>\n      </Tabs>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeAuthedUser } from \"../actions/authedUser\";\nimport { Navbar, Nav, Image, Button } from \"react-bootstrap\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nfunction mapStateToProps({ authedUser, users }) {\n  return {\n    name: users[authedUser].name,\n    avatar: users[authedUser].avatarURL,\n  };\n}\n\nclass Navig extends Component {\n  logOut = () => {\n    const { dispatch } = this.props;\n    dispatch(removeAuthedUser());\n    this.props.history.push(\"/\");\n  }; //when user logout, they'll be redirected to the loginpage\n\n  render() {\n    const { name, avatar } = this.props;\n    // console.log(\"Nav Data: \", this.props);\n    // console.log(this.props.history.location.pathname)\n\n    //to match and highlight the navbar item with the url\n    const location = this.props.history.location.pathname;\n\n    return (\n      <Navbar\n        id=\"navig\"\n        bg=\"primary\"\n        variant=\"dark\"\n        style={{ marginTop: \"5px\", height: \"65px\" }}\n      >\n        <Navbar.Brand style={{ fontSize: \"30px\" }}>\n          <Image\n            src={avatar}\n            style={{\n              width: \"60px\",\n              height: \"60px\",\n              marginLeft: \"40px\",\n              marginRight: \"10px\",\n            }}\n            roundedCircle\n          />\n          {`Hi, ${name}!`}\n        </Navbar.Brand>\n        <Nav\n          className=\"text-center m-auto\"\n          style={{ fontSize: \"25px\" }}\n          activeKey={\n            location === \"/home\" || location === \"/\"\n              ? \"/home\"\n              : location === \"/add\"\n              ? \"/add\"\n              : location === \"/leaderboard\"\n              ? \"/leaderboard\"\n              : \"/home\"\n          }\n        >\n          <Nav.Link as={NavLink} to=\"/home\" style={{ marginRight: \"50px\" }}>\n            Home\n          </Nav.Link>\n          <Nav.Link as={NavLink} to=\"/add\" style={{ marginRight: \"50px\" }}>\n            Add Poll\n          </Nav.Link>\n          <Nav.Link\n            as={NavLink}\n            to=\"/leaderboard\"\n            style={{ marginRight: \"50px\" }}\n          >\n            Leaderboard\n          </Nav.Link>\n        </Nav>\n        <Button\n          onClick={this.logOut}\n          style={{ fontSize: \"18px\", marginRight: \"40px\" }}\n        >\n          Logout\n        </Button>\n      </Navbar>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(withRouter(Navig));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddQuestion } from \"../actions/questions\";\nimport { Card, Button, Form } from \"react-bootstrap\";\n\nclass Addq extends Component {\n  //state starting empty\n  state = {\n    optionOne: \"\",\n    optionTwo: \"\",\n  };\n\n  //updating options in the state\n  changeOptionOne = (e) => {\n    const optionOne = e.target.value;\n    this.setState(() => ({\n      optionOne,\n    }));\n  };\n\n  changeOptionTwo = (e) => {\n    const optionTwo = e.target.value;\n    this.setState(() => ({\n      optionTwo,\n    }));\n  };\n\n  submitPoll = (e) => {\n    e.preventDefault();\n\n    const { optionOne, optionTwo } = this.state;\n    const { dispatch } = this.props;\n\n    //console.log(\"The poll is: \", this.state);\n\n    //adding the 2 options to the store\n    dispatch(handleAddQuestion(optionOne, optionTwo));\n    // alert('Your poll has been submitted!')\n    this.props.history.push(\"/home\");\n  };\n\n  render() {\n    const { optionOne, optionTwo } = this.state;\n\n    return (\n      <div style={{ marginTop: \"30px\" }}>\n        <Card className=\"m-auto\" style={{ width: \"30rem\" }}>\n          <Card.Header\n            className=\"text-center\"\n            style={{ fontSize: \"18px\", fontWeight: \"bold\" }}\n          >\n            Add a poll question\n          </Card.Header>\n          <Card.Body>\n            <Card.Text style={{ marginTop: \"30px\" }}>\n              Would you rather\n            </Card.Text>\n            <Form>\n              <Form.Group className=\"mb-3\" controlId=\"optionOne\">\n                <Form.Control\n                  placeholder=\"Option One\"\n                  value={optionOne}\n                  onChange={this.changeOptionOne}\n                />\n              </Form.Group>\n              <Card.Text>Or</Card.Text>\n              <Form.Group className=\"mb-3\" controlId=\"optionTwo\">\n                <Form.Control\n                  placeholder=\"Option Two\"\n                  value={optionTwo}\n                  onChange={this.changeOptionTwo}\n                />\n              </Form.Group>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Button\n                  variant=\"danger\"\n                  onClick={this.submitPoll}\n                  disabled={optionOne === \"\" || optionTwo === \"\"}\n                >\n                  Submit\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Addq);\n//we used connect to get access to dispatch, we didn't pass any props as we don't need any\n//we just created a local state that only this comp will have access to\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Card,\n  ListGroup,\n  Badge,\n  Image,\n  Button,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\n//getting users info and sorting them according to score\nfunction mapStateToProps({ authedUser, users }) {\n  const usersList = Object.values(users)\n    .map((user) => ({\n      id: user.id,\n      name: user.name,\n      avatar: user.avatarURL,\n      numberAsked: user.questions.length,\n      numberAnswered: Object.keys(user.answers).length,\n      score: user.questions.length + Object.keys(user.answers).length,\n    }))\n    .sort((a, b) => b.score - a.score);\n  return {\n    authedUser,\n    usersList,\n  };\n}\n\nclass Leaderboard extends Component {\n  //to show detailed score(number of questions added and taken)\n  state = { showDetails: false };\n\n  render() {\n    const { authedUser, usersList } = this.props;\n    // console.log(\"Leaderboard Data: \", this.props);\n\n    const { showDetails } = this.state;\n\n    return (\n      <div style={{ marginTop: \"30px\" }}>\n        <Card style={{ width: \"30rem\" }} className=\"m-auto\">\n          <Card.Header\n            className=\"text-center\"\n            style={{ fontSize: \"23px\", fontWeight: \"bold\" }}\n          >\n            <Row\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              Leaderboard\n            </Row>\n            <Row>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginTop: \"10px\",\n                }}\n              >\n                <Button\n                  variant=\"secondary\"\n                  type=\"button\"\n                  onClick={() => this.setState({ showDetails: !showDetails })}\n                >\n                  {showDetails ? \"Hide\" : \"Show\"} Detailed Scores\n                </Button>\n              </div>\n            </Row>\n          </Card.Header>\n          <ListGroup variant=\"flush\">\n            {usersList.map((user, index) => (\n              <ListGroup.Item\n                key={user.id}\n                style={{\n                  marginTop: \"10px\",\n                  backgroundColor: authedUser === user.id ? \"#dae2e8\" : null,\n                }}\n              >\n                {index === 0 ? (\n                  <Row>\n                    <Col>\n                      <Badge\n                        pill\n                        id=\"badge\"\n                        bg=\"warning\"\n                        style={{\n                          fontSize: \"17px\",\n                          fontWeight: \"bold\",\n                          marginRight: \"10px\",\n                          width: \"53px\",\n                        }}\n                      >\n                        1st\n                      </Badge>\n                    </Col>\n                  </Row>\n                ) : index === 1 ? (\n                  <Row>\n                    <Col>\n                      <Badge\n                        pill\n                        bg=\"secondary\"\n                        style={{\n                          fontSize: \"17px\",\n                          fontWeight: \"bold\",\n                          marginRight: \"10px\",\n                        }}\n                      >\n                        2nd\n                      </Badge>\n                    </Col>\n                  </Row>\n                ) : index === 2 ? (\n                  <Row>\n                    <Col>\n                      <Badge\n                        pill\n                        bg=\"danger\"\n                        style={{\n                          fontSize: \"17px\",\n                          fontWeight: \"bold\",\n                          marginRight: \"10px\",\n                        }}\n                      >\n                        3rd\n                      </Badge>\n                    </Col>\n                  </Row>\n                ) : null}\n\n                <Row>\n                  <div id=\"badge\"></div>\n                  <Col md=\"auto\">\n                    <Image\n                      rounded\n                      src={user.avatar}\n                      alt={`Avatar of ${user.name}`}\n                      width=\"90\"\n                      height=\"90\"\n                      style={{ marginBottom: \"20px\", marginLeft: \"20px\" }}\n                    />\n                  </Col>\n                  <Col></Col>\n                  <Col\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      marginRight: \"30px\",\n                    }}\n                  >\n                    <Card\n                      style={{\n                        backgroundColor: \"#b8c3d1\",\n                        fontSize: \"30px\",\n                        fontWeight: \"bold\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <Card.Header style={{ fontSize: \"25px\" }}>\n                        Score\n                      </Card.Header>\n                      {user.score}\n                    </Card>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Card.Title style={{ marginLeft: \"20px\" }}>\n                      {user.name}\n                    </Card.Title>\n                  </Col>\n                  <Col md=\"auto\"></Col>\n\n                  {showDetails ? (\n                    <div>\n                      <Card\n                        style={{\n                          backgroundColor: \"#b8c3d1\",\n                          marginTop: \"10px\",\n                        }}\n                      >\n                        <Card.Header\n                          className=\"text-center\"\n                          style={{ fontSize: \"17px\", fontWeight: \"bold\" }}\n                        >\n                          Detailed Score\n                        </Card.Header>\n                        <Card.Title\n                          style={{ marginLeft: \"5px\", marginTop: \"5px\" }}\n                        >\n                          Polls Added: {user.numberAsked}\n                        </Card.Title>\n                        <Card.Title style={{ marginLeft: \"5px\" }}>\n                          Polls Taken: {user.numberAnswered}\n                        </Card.Title>\n                      </Card>\n                    </div>\n                  ) : null}\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Leaderboard);\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Error extends Component {\n  componentDidMount() {\n    //to hide Navig compoenent on error page\n    document.getElementById(\"navig\").style.display = \"none\";\n  }\n\n  componentWillUnmount() {\n    document.getElementById(\"navig\").style.display = \"flex\";\n  }\n\n  render() {\n    // console.log(this.props);\n    return (\n      <div style={{ backgroundColor: \"#f7faf8\" }}>\n        <img\n          src=\"https://i.postimg.cc/QxZCyBZp/error.png\"\n          alt=\"pageNotFound\"\n          style={{\n            width: \"70%\",\n            height: \"85vh\",\n            display: \"flex\",\n            margin: \"auto\",\n          }}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button as={NavLink} to=\"/home\">\n            Go Home\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Error;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddAnswer } from \"../actions/questions\";\nimport {\n  Card,\n  Button,\n  Row,\n  Col,\n  Form,\n  Badge,\n  ProgressBar,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { formatQuestion } from \"../utils/helpers\";\nimport Error from \"./Error\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction mapStateToProps({ authedUser, questions, users }, { match }) {\n  const id = match.params.question_id; //to render the question id in the url\n  const question = questions[id];\n  const error = question === undefined;\n\n  //if user entered a wrong url, we catch the error in order not to break the code\n  if (error) {\n    return {\n      error,\n    };\n  }\n\n  return {\n    authedUser,\n    question: formatQuestion(question, users[question.author], authedUser),\n  };\n}\n\nclass Vote extends Component {\n  state = { answer: \"\" };\n\n  chooseOption = (e) => {\n    this.setState({ answer: e.target.value });\n    // console.log(this.state.answer);\n  };\n\n  submitVote = (e) => {\n    e.preventDefault();\n\n    const { dispatch, authedUser, question } = this.props;\n    const { answer } = this.state;\n\n    dispatch(\n      handleAddAnswer({\n        authedUser,\n        qid: question.id,\n        answer: answer,\n      })\n    );\n  };\n\n  render() {\n    const { authedUser, question, error } = this.props;\n\n    //if user entered an non-existent url, redirect to error page\n    if (error) {\n      return <Error />;\n    }\n\n    //destructuring\n    const {\n      name,\n      avatar,\n      optionOne,\n      optionTwo,\n      votesOne,\n      votesTwo,\n      userVoteOne,\n      userVoteTwo,\n      totalVotes,\n    } = question;\n\n    const voteOnePer = ((votesOne / totalVotes) * 100).toFixed(1);\n    const voteTwoPer = ((votesTwo / totalVotes) * 100).toFixed(1);\n    // console.log('Per: ', voteOnePer, voteTwoPer)\n    const { answer } = this.state;\n\n    //console.log(\"Vote data: \", this.props);\n\n    //checking the user vote to either return a poll details page and\n    //highlight the option selected or return the voting page\n    let userVote = \"\";\n    if (userVoteOne.includes(authedUser)) {\n      userVote = \"optionOne\";\n    } else if (userVoteTwo.includes(authedUser)) {\n      userVote = \"optionTwo\";\n    }\n\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        Go Back\n      </Tooltip>\n    );\n\n    return (\n      <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n        <Card style={{ width: \"40rem\" }} border=\"primary\" className=\"m-auto\">\n          <Card.Body>\n            <Row className=\"align-items-center justify-content-md-center\">\n              <Col md=\"auto\" style={{ marginLeft: \"20px\" }}>\n                <img\n                  src={avatar}\n                  alt={`Avatar of ${name}`}\n                  width=\"90\"\n                  height=\"90\"\n                  style={{ marginBottom: \"20px\" }}\n                />\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  {name} is asking:\n                </Card.Subtitle>\n              </Col>\n              <Col style={{ marginLeft: \"20px\" }}>\n                <Card.Title\n                  style={{ marginTop: \"5px\", fontSize: \"25px\" }}\n                  className=\"mb-2\"\n                >\n                  Would your rather\n                </Card.Title>\n                {!userVoteOne.includes(authedUser) &&\n                !userVoteTwo.includes(authedUser) ? (\n                  <div>\n                    <Form\n                      onSubmit={this.submitVote}\n                      style={{ marginTop: \"40px\", marginLeft: \"50px\" }}\n                    >\n                      <Form.Check\n                        onChange={this.chooseOption}\n                        type=\"radio\"\n                        label={optionOne}\n                        value=\"optionOne\"\n                        name=\"vote\"\n                        style={{ marginTop: \"40px\", fontSize: \"20px\" }}\n                      />\n                      <div style={{ fontSize: \"19px\", marginTop: \"20px\" }}>\n                        Or\n                      </div>\n                      <Form.Check\n                        onChange={this.chooseOption}\n                        type=\"radio\"\n                        label={optionTwo}\n                        value=\"optionTwo\"\n                        name=\"vote\"\n                        style={{ marginTop: \"20px\", fontSize: \"20px\" }}\n                      />\n                      <Button\n                        type=\"submit\"\n                        variant=\"danger\"\n                        style={{ marginTop: \"60px\" }}\n                        disabled={answer === \"\"}\n                        onClick={this.showResult}\n                      >\n                        Vote\n                      </Button>\n                    </Form>\n                  </div>\n                ) : (\n                  <div>\n                    <div\n                      style={{\n                        fontSize: \"20px\",\n                        fontWeight: \"bold\",\n                        border: \"2px solid blue\",\n                        borderRadius: \"5px\",\n                        marginTop: \"20px\",\n                        paddingLeft: \"5px\",\n                        backgroundColor:\n                          userVote === \"optionOne\" ? \"#fcdf5b\" : \"white\",\n                      }}\n                    >\n                      {optionOne}\n                      {userVote === \"optionOne\" ? (\n                        <Badge pill bg=\"danger\" style={{ marginLeft: \"10px\" }}>\n                          Your Choice\n                        </Badge>\n                      ) : null}\n                      <ProgressBar\n                        striped\n                        style={{ height: \"20px\", margin: \"5px\" }}\n                        variant=\"primary\"\n                        now={votesOne}\n                        label={`${voteOnePer}%`}\n                        max={totalVotes}\n                      ></ProgressBar>\n                      <span\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        {votesOne} out of {totalVotes}\n                      </span>\n                    </div>\n                    <div\n                      style={{\n                        fontSize: \"20px\",\n                        fontWeight: \"bold\",\n                        border: \"2px solid blue\",\n                        borderRadius: \"5px\",\n                        marginTop: \"15px\",\n                        paddingLeft: \"5px\",\n                        backgroundColor:\n                          userVote === \"optionTwo\" ? \"#fcdf5b\" : \"white\",\n                      }}\n                    >\n                      {optionTwo}\n                      {userVote === \"optionTwo\" ? (\n                        <Badge pill bg=\"danger\" style={{ marginLeft: \"10px\" }}>\n                          Your Choice\n                        </Badge>\n                      ) : null}\n                      <ProgressBar\n                        striped\n                        style={{ height: \"20px\", margin: \"5px\" }}\n                        variant=\"primary\"\n                        now={votesTwo}\n                        label={`${voteTwoPer}%`}\n                        max={totalVotes}\n                      ></ProgressBar>\n                      <span\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        {votesTwo} out of {totalVotes}\n                      </span>\n                    </div>\n                  </div>\n                )}\n              </Col>\n            </Row>\n            <OverlayTrigger\n              placement=\"left\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={renderTooltip}\n            >\n              <Button as={NavLink} to=\"/home\">\n                &#10094;\n              </Button>\n            </OverlayTrigger>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Vote);\n","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nconst MyLoader = () => (\n  <ContentLoader \n    speed={2}\n    width={1360}\n    height={500}\n    viewBox=\"0 0 1360 500\"\n    backgroundColor=\"#bfbfbf\"\n    foregroundColor=\"#a6a2a2\"\n    // {...props}\n  >\n    <rect x=\"2\" y=\"1\" rx=\"3\" ry=\"3\" width=\"1360\" height=\"70\" /> \n    <rect x=\"574\" y=\"450\" rx=\"3\" ry=\"3\" width=\"223\" height=\"50\" /> \n    <rect x=\"500\" y=\"100\" rx=\"0\" ry=\"0\" width=\"400\" height=\"300\" />\n  </ContentLoader>\n)\n\nexport default MyLoader\n\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { handleInitialData } from \"../actions/shared\";\nimport Auth from \"./Auth\";\nimport Home from \"./Home\";\nimport Navig from \"./Navig\";\nimport Addq from \"./Addq\";\nimport Leaderboard from \"./Leaderboard\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport LoadingBar from \"react-redux-loading\";\nimport Vote from \"./Vote\";\nimport Error from \"./Error\";\nimport Skeleton from \"./Skeleton\";\n\nfunction mapStateToProps({ authedUser, users }) {\n  return {\n    authedUser,\n    loading: users === null, // to render login pg after we get users\n  };\n}\n\nclass App extends Component {\n  state = { isLoading: true }; //set a loading state\n\n  //when this comp mounts we dispatch handleInitiaData to get the data\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.dispatch(handleInitialData());\n      this.setState({ isLoading: false });\n    }, 5000);\n  }\n\n  render() {\n    const { authedUser, loading } = this.props;\n    return (\n      <div>\n        {!loading ? <LoadingBar /> : null}\n        {this.state.isLoading === true ? (\n          <Skeleton />\n        ) : (\n          <div>\n            {!authedUser ? (\n              <Auth />\n            ) : (\n              <Fragment>\n                <Navig />\n                <Switch>\n                  <Route path=\"/home\" component={Home} />\n                  <Route path=\"/add\" component={Addq} />\n                  <Route path=\"/leaderboard\" component={Leaderboard} />\n                  <Route path=\"/questions/:question_id\" component={Vote} />\n                  <Route component={Error} />\n                </Switch>\n              </Fragment>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n//Using the connect() function upgrades a component to a container.\n//Containers can read state from the store and dispatch actions.\n","import { combineReducers } from \"redux\";\nimport authedUser from \"./authedUser\";\nimport users from \"./users\";\nimport questions from \"./questions\";\nimport { loadingBarReducer } from \"react-redux-loading\";\n\n//combining reducers cuz createStore func can only have one root reducer\nexport default combineReducers({\n  authedUser,\n  users,\n  questions,\n  loadingBar: loadingBarReducer,\n});\n","import { SET_AUTHED_USER, REMOVE_AUTHED_USER } from \"../actions/authedUser\";\n\nexport default function authedUser(state = null, action) {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      return action.id;\n    case REMOVE_AUTHED_USER:\n      return null;\n    default:\n      return state;\n  }\n}\n","import { GET_USERS } from \"../actions/users\";\nimport { ADD_QUESTION, ADD_ANSWER } from \"../actions/questions\";\n\nexport default function users(state = {}, action) {\n  switch (action.type) {\n    case GET_USERS:\n      return {\n        ...state, //slice of the state\n        ...action.users, //all users we gettign from the action\n      };\n    case ADD_QUESTION:\n      return {\n        ...state, //slice of the state\n        [action.question.author]: {\n          //updating that slice of state\n          ...state[action.question.author],\n          questions: state[action.question.author].questions.concat([\n            action.question.id,\n          ]),\n        },\n      };\n    case ADD_ANSWER:\n      return {\n        ...state,\n        [action.authedUser]: {\n          ...state[action.authedUser],\n          answers: {\n            ...state[action.authedUser].answers,\n            [action.qid]: action.answer,\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_QUESTIONS, ADD_QUESTION, ADD_ANSWER } from \"../actions/questions\";\n\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case GET_QUESTIONS:\n      return {\n        ...state, //return our slice on the state\n        ...action.questions, //merging questions with state\n      };\n    case ADD_QUESTION:\n      return {\n        ...state,\n        [action.question.id]: action.question,\n      };\n    case ADD_ANSWER:\n      return {\n        ...state, //slice of the state\n        [action.qid]: {\n          //updating that slice of state\n          ...state[action.qid],\n          [action.answer]: {\n            ...state[action.qid][action.answer],\n            votes: state[action.qid][action.answer].votes.concat([\n              action.authedUser,\n            ]),\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n","const logger = (store) => (next) => (action) => {\n  // console.group(action.type);\n  // console.log(\"The action: \", action);\n  const returnValue = next(action); //next will be dispatch\n  // console.log(\"The new state: \", store.getState());\n  // console.groupEnd();\n  return returnValue;\n};\n\nexport default logger;\n","import thunk from \"redux-thunk\";\nimport logger from \"./logger\";\nimport { applyMiddleware } from \"redux\";\n\nexport default applyMiddleware(thunk, logger);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport middleware from \"./middleware\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}