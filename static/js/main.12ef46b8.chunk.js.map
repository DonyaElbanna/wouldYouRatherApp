{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/shared.js","actions/authedUser.js","components/AuthNav.js","components/Auth.js","utils/helpers.js","components/Question.js","components/Unansweredq.js","components/Home.js","components/Navig.js","components/Addq.js","components/Leaderboard.js","components/Error.js","components/Vote.js","components/Skeleton.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","info","qid","answer","_saveQuestionAnswer","GET_USERS","GET_QUESTIONS","ADD_QUESTION","ADD_ANSWER","addAnswer","type","handleAddQuestion","dispatch","getState","showLoading","then","addQuestion","hideLoading","handleAddAnswer","catch","e","console","warn","alert","handleInitialData","all","getUsers","getQuestions","SET_AUTHED_USER","REMOVE_AUTHED_USER","setAuthedUser","removeAuthedUser","AuthNav","redirect","props","location","this","history","pathname","Navbar","bg","variant","style","marginTop","height","Brand","fontSize","Image","src","width","marginLeft","marginRight","Nav","className","activeKey","Link","as","NavLink","to","onClick","Component","connect","withRouter","Auth","state","selectedUser","selectUser","setState","logIn","preventDefault","from","push","userId","map","user","Container","fluid","Card","Title","Img","Body","Row","display","justifyContent","alignItems","Col","md","Dropdown","Toggle","backgroundColor","Menu","overflowY","maxHeight","Item","roundedCircle","Divider","Button","disabled","Object","values","votesOne","length","votesTwo","avatar","userVoteOne","userVoteTwo","totalVotes","Question","marginBottom","border","alt","Subtitle","span","offset","fontWeight","Unansweredq","Home","unansQs","ansQs","Tabs","fill","defaultActiveKey","Tab","eventKey","title","keys","filter","q","includes","sort","a","b","Navig","logOut","Addq","changeOptionOne","target","value","changeOptionTwo","submitPoll","Header","Text","Form","Group","controlId","Control","placeholder","onChange","Leaderboard","showDetails","usersList","ListGroup","index","Badge","pill","rounded","textAlign","score","numberAsked","numberAnswered","Error","document","getElementById","log","margin","Vote","chooseOption","submitVote","error","voteOnePer","toFixed","voteTwoPer","userVote","borderRadius","paddingLeft","ProgressBar","striped","label","max","onSubmit","Check","showResult","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","match","params","question_id","undefined","MyLoader","speed","viewBox","foregroundColor","x","y","rx","ry","App","isLoading","loading","Skeleton","path","component","combineReducers","action","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render"],"mappings":"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","file":"static/js/main.12ef46b8.chunk.js","sourcesContent":["let users = {\n    sarahedo: {\n      id: 'sarahedo',\n      name: 'Sarah Edo',\n      avatarURL: '/3.jpg',\n      answers: {\n        \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n        \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n        \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n        \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n      },\n      questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n    },\n    tylermcginnis: {\n      id: 'tylermcginnis',\n      name: 'Tyler McGinnis',\n      avatarURL: '/2.jpg',\n      answers: {\n        \"vthrdm985a262al8qx3do\": 'optionOne',\n        \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n      },\n      questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    },\n    johndoe: {\n      id: 'johndoe',\n      name: 'John Doe',\n      avatarURL: '/1.jpg',\n      answers: {\n        \"xj352vofupe1dqz9emx13r\": 'optionOne',\n        \"vthrdm985a262al8qx3do\": 'optionTwo',\n        \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n      },\n      questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    }\n  }\n  \n  let questions = {\n    \"8xf0y6ziyjabvozdd253nd\": {\n      id: '8xf0y6ziyjabvozdd253nd',\n      author: 'sarahedo',\n      timestamp: 1467166872634,\n      optionOne: {\n        votes: ['sarahedo'],\n        text: 'have horrible short term memory',\n      },\n      optionTwo: {\n        votes: [],\n        text: 'have horrible long term memory'\n      }\n    },\n    \"6ni6ok3ym7mf1p33lnez\": {\n      id: '6ni6ok3ym7mf1p33lnez',\n      author: 'johndoe',\n      timestamp: 1468479767190,\n      optionOne: {\n        votes: [],\n        text: 'become a superhero',\n      },\n      optionTwo: {\n        votes: ['johndoe', 'sarahedo'],\n        text: 'become a supervillain'\n      }\n    },\n    \"am8ehyc8byjqgar0jgpub9\": {\n      id: 'am8ehyc8byjqgar0jgpub9',\n      author: 'sarahedo',\n      timestamp: 1488579767190,\n      optionOne: {\n        votes: [],\n        text: 'be telekinetic',\n      },\n      optionTwo: {\n        votes: ['sarahedo'],\n        text: 'be telepathic'\n      }\n    },\n    \"loxhs1bqm25b708cmbf3g\": {\n      id: 'loxhs1bqm25b708cmbf3g',\n      author: 'tylermcginnis',\n      timestamp: 1482579767190,\n      optionOne: {\n        votes: [],\n        text: 'be a front-end developer',\n      },\n      optionTwo: {\n        votes: ['sarahedo'],\n        text: 'be a back-end developer'\n      }\n    },\n    \"vthrdm985a262al8qx3do\": {\n      id: 'vthrdm985a262al8qx3do',\n      author: 'tylermcginnis',\n      timestamp: 1489579767190,\n      optionOne: {\n        votes: ['tylermcginnis'],\n        text: 'find $50 yourself',\n      },\n      optionTwo: {\n        votes: ['johndoe'],\n        text: 'have your best friend find $500'\n      }\n    },\n    \"xj352vofupe1dqz9emx13r\": {\n      id: 'xj352vofupe1dqz9emx13r',\n      author: 'johndoe',\n      timestamp: 1493579767190,\n      optionOne: {\n        votes: ['johndoe'],\n        text: 'write JavaScript',\n      },\n      optionTwo: {\n        votes: ['tylermcginnis'],\n        text: 'write Swift'\n      }\n    },\n  }\n  \n  function generateUID () {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n  }\n  \n  export function _getUsers () {\n    return new Promise((res, rej) => {\n      setTimeout(() => res({...users}), 1000)\n    })\n  }\n  \n  export function _getQuestions () {\n    return new Promise((res, rej) => {\n      setTimeout(() => res({...questions}), 1000)\n    })\n  }\n  \n  function formatQuestion ({ optionOneText, optionTwoText, author }) {\n    return {\n      id: generateUID(),\n      timestamp: Date.now(),\n      author,\n      optionOne: {\n        votes: [],\n        text: optionOneText,\n      },\n      optionTwo: {\n        votes: [],\n        text: optionTwoText,\n      }\n    }\n  }\n  \n  export function _saveQuestion (question) {\n    return new Promise((res, rej) => {\n      const authedUser = question.author;\n      const formattedQuestion = formatQuestion(question);\n  \n      setTimeout(() => {\n        questions = {\n          ...questions,\n          [formattedQuestion.id]: formattedQuestion\n        }\n        \n        users = {\n          ...users,\n          [authedUser]: {\n            ...users[authedUser],\n            questions: users[authedUser].questions.concat([formattedQuestion.id])\n          }\n        }\n  \n        res(formattedQuestion)\n      }, 1000)\n    })\n  }\n  \n  export function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        users = {\n          ...users,\n          [authedUser]: {\n            ...users[authedUser],\n            answers: {\n              ...users[authedUser].answers,\n              [qid]: answer\n            }\n          }\n        }\n  \n        questions = {\n          ...questions,\n          [qid]: {\n            ...questions[qid],\n            [answer]: {\n              ...questions[qid][answer],\n              votes: questions[qid][answer].votes.concat([authedUser])\n            }\n          }\n        }\n  \n        res()\n      }, 500)\n    })\n  }\n  ","import {\n    _getUsers,\n    _getQuestions,\n    _saveQuestion,\n    _saveQuestionAnswer\n} from './_DATA.js'\n\nexport function getInitialData () {\n    return Promise.all([\n      _getUsers(),\n      _getQuestions(),\n    ]).then(([users, questions]) => ({\n      users,\n      questions,\n    }))\n  }\n  \n  export function saveQuestion (info) {\n    return _saveQuestion(info)\n  }\n  \n  export function saveQuestionAnswer (info) {\n    return _saveQuestionAnswer(info)\n  }","export const GET_USERS = \"GET_USERS\";\n\n//action creator\nexport function getUsers(users) {\n  return {\n    type: GET_USERS,\n    users,\n  };\n}\n","import { saveQuestion, saveQuestionAnswer } from \"../utils/api\";\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\n\n//action types\nexport const GET_QUESTIONS = \"GET_QUESTIONS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const ADD_ANSWER = \"ADD_ANSWER\";\n\n//action creators\nexport function getQuestions(questions) {\n  return {\n    type: GET_QUESTIONS,\n    questions,\n  };\n}\n\nfunction addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question,\n  };\n}\n\nfunction addAnswer({ authedUser, qid, answer }) {\n  return {\n    type: ADD_ANSWER,\n    authedUser,\n    qid,\n    answer,\n  };\n}\n\n// Async action creators\nexport function handleAddQuestion(optionOne, optionTwo) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState();\n\n    dispatch(showLoading());\n\n    return saveQuestion({\n      author: authedUser,\n      optionOneText: optionOne,\n      optionTwoText: optionTwo,\n    })\n      .then((question) => dispatch(addQuestion(question)))\n      .then(() => dispatch(hideLoading()));\n  };\n}\n\nexport function handleAddAnswer(info) {\n  return (dispatch) => {\n    dispatch(addAnswer(info)); //optimitic update\n\n    return saveQuestionAnswer(info).catch((e) => {\n      console.warn(\"Error in handlingAddingAnswer: \", e);\n      dispatch(addAnswer(info));\n      alert(\"There was an error submitting your answer, please try again.\");\n    });\n  };\n}\n","import { getInitialData } from \"../utils/api\";\nimport { getUsers } from \"../actions/users\";\nimport { getQuestions } from \"../actions/questions\";\nimport { showLoading, hideLoading } from \"react-redux-loading\";\n//before getInitialData we showLoading, and after getting data we invoke hide loading\n\n//thunk action creator\nexport function handleInitialData() {\n  return (dispatch) => {\n    dispatch(showLoading());\n    return getInitialData() //this will get users and questions data\n      .then(({ users, questions }) => {\n        //we want to add those to redux store\n        dispatch(getUsers(users));\n        dispatch(getQuestions(questions));\n        //we'll set up reducers for these to handle their dispatches (modify based on their actions)\n        //cuz we're returning a function, we have to use thunk middleware\n        dispatch(hideLoading());\n      });\n  };\n}\n","export const SET_AUTHED_USER = \"SET_AUTHED_USER\";\nexport const REMOVE_AUTHED_USER = \"REMOVE_AUTHED_USER\";\n\nexport function setAuthedUser(id) {\n  return {\n    type: SET_AUTHED_USER,\n    id,\n  };\n}\n\nexport function removeAuthedUser() {\n  return {\n    type: REMOVE_AUTHED_USER,\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navbar, Nav, Image } from \"react-bootstrap\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    authedUser,\n  };\n}\n\nclass AuthNav extends Component {\n  redirect = () => {\n    if (!this.props.authedUser) {\n      alert(\"You have to sign in first!\");\n    }\n  };\n\n  render() {\n    const location = this.props.history.location.pathname;\n\n    return (\n      <Navbar\n        id=\"navig\"\n        bg=\"primary\"\n        variant=\"dark\"\n        style={{ marginTop: \"5px\", height: \"65px\" }}\n      >\n        <Navbar.Brand style={{ fontSize: \"30px\" }}>\n          <Image\n            src=\"/wydpic.png\"\n            style={{\n              width: \"100px\",\n              height: \"60px\",\n              marginLeft: \"40px\",\n              marginRight: \"10px\",\n            }}\n          />\n          Welcome!\n        </Navbar.Brand>\n        <Nav\n          className=\"text-center m-auto\"\n          style={{ fontSize: \"25px\" }}\n          activeKey={\n            location === \"/home\" || location === \"/\"\n              ? \"/home\"\n              : location === \"/add\"\n              ? \"/add\"\n              : location === \"/leaderboard\"\n              ? \"/leaderboard\"\n              : \"/home\"\n          }\n        >\n          <Nav.Link\n            as={NavLink}\n            to=\"/home\"\n            onClick={this.redirect}\n            style={{ marginRight: \"50px\" }}\n          >\n            Home\n          </Nav.Link>\n          <Nav.Link\n            as={NavLink}\n            to=\"/add\"\n            onClick={this.redirect}\n            style={{ marginRight: \"50px\" }}\n          >\n            Add Poll\n          </Nav.Link>\n          <Nav.Link\n            as={NavLink}\n            to=\"/leaderboard\"\n            onClick={this.redirect}\n            style={{ marginRight: \"50px\" }}\n          >\n            Leaderboard\n          </Nav.Link>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(withRouter(AuthNav));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setAuthedUser } from \"../actions/authedUser\";\nimport {\n  Container,\n  Card,\n  Button,\n  Row,\n  Col,\n  Dropdown,\n  Image,\n} from \"react-bootstrap\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport AuthNav from \"./AuthNav\";\n\nfunction mapStateToProps({ users }) {\n  return {\n    users: Object.values(users),\n  };\n} //getting the users data array with the their values\n\nclass Auth extends Component {\n  state = { selectedUser: null };\n\n  //when a user is selected from the list, we take the id in set the value in our state\n  selectUser = (id) => {\n    this.setState({ selectedUser: id });\n  };\n\n  logIn = (e) => {\n    e.preventDefault();\n\n    const { selectedUser } = this.state;\n    const { dispatch } = this.props;\n\n    //with access to withRouter, to get the url the user wanted to navigate to\n    const from = this.props.history.location.pathname;\n\n    //if a user signed in, we redirect user to the home page\n    if (selectedUser) {\n      dispatch(setAuthedUser(selectedUser));\n      if (from === \"/\") {\n        this.props.history.push(\"/home\");\n      }\n      //if the user tried to access a page before signing in,\n      //the user will be required to sign in then redirected to the desired page\n    } else if (from !== \"/\") {\n      return <Redirect to={from} />;\n    }\n  };\n\n  render() {\n    const { users } = this.props;\n    const { selectedUser } = this.state;\n\n    //to link the userId to their name in the dropdown select\n    const userId = users.map((user) => user.id);\n\n    // console.log(\"Auth Data: \", this.props);\n\n    return (\n      <div style={{ marginTop: \"5px\" }}>\n        <AuthNav />\n        <Container fluid className=\"text-center m-auto\">\n          <Card className=\"m-auto\" style={{ height: \"90vh\" }}>\n            <Card.Title style={{ marginTop: \"20px\" }}></Card.Title>\n            <Card.Img\n              variant=\"top\"\n              className=\"m-auto\"\n              style={{ width: \"22rem\" }}\n              src=\"/wydpic.png\"\n            />\n            <Card.Body>\n              <footer className=\"blockquote-footer\">\n                You have to sign in to play the game.\n              </footer>\n              <Row\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginTop: \"30px\",\n                }}\n              >\n                <Col md=\"auto\">\n                  <Dropdown>\n                    <Dropdown.Toggle\n                      variant=\"light\"\n                      style={{ width: \"200px\", backgroundColor: \"#e3e1e1\" }}\n                    >\n                      {!selectedUser ? (\n                        <span>Select a user</span>\n                      ) : selectedUser === userId[0] ? (\n                        <span>Sarah Edo</span>\n                      ) : selectedUser === userId[1] ? (\n                        <span>Tyler McGinnis</span>\n                      ) : selectedUser === userId[2] ? (\n                        <span>John Doe</span>\n                      ) : null}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu\n                      style={{ overflowY: \"scroll\", maxHeight: \"140px\" }}\n                    >\n                      {users.map((user) => (\n                        <Dropdown.Item\n                          key={user.id}\n                          onClick={(e) => {\n                            this.selectUser(user.id);\n                          }}\n                        >\n                          <div>\n                            <Image\n                              src={user.avatarURL}\n                              style={{\n                                width: \"45px\",\n                                height: \"45px\",\n                                marginRight: \"5px\",\n                              }}\n                              roundedCircle\n                            />\n                            {user.name}\n                            <Dropdown.Divider />\n                          </div>\n                        </Dropdown.Item>\n                      ))}\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n                <Col md=\"auto\">\n                  <Button\n                    type=\"submit\"\n                    disabled={selectedUser === null}\n                    onClick={this.logIn}\n                  >\n                    Login\n                  </Button>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(withRouter(Auth));\n","  export function formatQuestion (question, author) {\n    const { id, timestamp } = question\n    const { name, avatarURL } = author\n    const optionOne = question.optionOne.text\n    const optionTwo = question.optionTwo.text\n    const votesOne = question.optionOne.votes.length\n    const votesTwo = question.optionTwo.votes.length\n    const userVoteOne = question.optionOne.votes\n    const userVoteTwo = question.optionTwo.votes\n    const totalVotes = votesOne + votesTwo\n\n    return {\n      id,\n      name: name,\n      timestamp,\n      avatar: avatarURL,\n      author,\n      optionOne,\n      optionTwo,\n      votesOne,\n      votesTwo,\n      userVoteOne,\n      userVoteTwo,\n      totalVotes\n      }\n    }\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { formatQuestion } from \"../utils/helpers\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\n//passing id as props in the 2nd argument\nfunction mapStateToProps({ authedUser, users, questions }, { id }) {\n  const question = questions[id];\n  return {\n    authedUser,\n    question: formatQuestion(question, users[question.author], authedUser),\n  };\n}\n\nclass Question extends Component {\n  render() {\n    const { question } = this.props;\n\n    // console.log(\"Answered questions: \", this.props);\n\n    //destructuring\n    const { id, name, avatar, optionOne, optionTwo } = question;\n\n    return (\n      <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n        <Card style={{ width: \"40rem\" }} border=\"primary\" className=\"m-auto\">\n          <Card.Body>\n            <Row className=\"align-items-center justify-content-md-center\">\n              <Col md=\"auto\">\n                <img\n                  src={avatar}\n                  alt={`Avatar of ${name}`}\n                  width=\"90\"\n                  height=\"90\"\n                  style={{ marginTop: \"50px\", marginBottom: \"20px\" }}\n                />\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  {name} is asking:\n                </Card.Subtitle>\n              </Col>\n              <Col md={{ span: 6, offset: 2 }}>\n                <Card.Title style={{ marginTop: \"5px\" }} className=\"mb-2\">\n                  Would your rather\n                </Card.Title>\n                <Button\n                  variant=\"outline-dark\"\n                  disabled\n                  style={{\n                    fontWeight: \"bold\",\n                    marginTop: \"20px\",\n                    marginBottom: \"10px\",\n                  }}\n                >\n                  {optionOne}\n                </Button>\n                <Card.Title>Or</Card.Title>\n                <Button\n                  variant=\"outline-dark\"\n                  disabled\n                  style={{ fontWeight: \"bold\", display: \"block\" }}\n                >\n                  {optionTwo}\n                </Button>\n              </Col>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Button\n                  as={NavLink}\n                  to={`/questions/${id}`}\n                  variant=\"danger\"\n                  style={{ marginTop: \"35px\" }}\n                >\n                  Show Poll\n                </Button>\n              </div>\n            </Row>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Question);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { formatQuestion } from \"../utils/helpers\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport { NavLink } from 'react-router-dom'\n\nfunction mapStateToProps({ authedUser, users, questions }, { id }) {\n  const question = questions[id];\n  return {\n    id,\n    authedUser,\n    question: formatQuestion(question, users[question.author], authedUser),\n  };\n}\n\nclass Unansweredq extends Component {\n  render() {\n    const { question } = this.props;\n    // console.log(\"Unanswered questions: \", this.props);\n\n    //destructuring\n    const { id, name, avatar, optionOne, optionTwo } = question;\n\n    return (\n      <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n        <Card style={{ width: \"40rem\" }} border=\"primary\" className=\"m-auto\">\n          <Card.Body>\n            <Row className=\"align-items-center justify-content-md-center\">\n              <Col md=\"auto\">\n                <img\n                  src={avatar}\n                  alt={`Avatar of ${name}`}\n                  width=\"90\"\n                  height=\"90\"\n                  style={{ marginTop: \"50px\", marginBottom: \"20px\" }}\n                />\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  {name} is asking:\n                </Card.Subtitle>\n              </Col>\n              <Col md={{ span: 6, offset: 2 }}>\n                <Card.Title style={{ marginTop: \"5px\" }} className=\"mb-2\">\n                  Would your rather\n                </Card.Title>\n                <Button\n                  variant=\"outline-dark\"\n                  disabled\n                  style={{\n                    fontWeight: \"bold\",\n                    marginTop: \"20px\",\n                    marginBottom: \"10px\",\n                  }}\n                >\n                  {optionOne}\n                </Button>\n                <Card.Title>Or</Card.Title>\n                <Button\n                  variant=\"outline-dark\"\n                  disabled\n                  style={{ fontWeight: \"bold\", display: \"block\" }}\n                >\n                  {optionTwo}\n                </Button>\n              </Col>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Button\n                  as={NavLink}\n                  to={`/questions/${id}`}\n                  style={{ marginTop: \"35px\" }}\n                  variant=\"danger\"\n                >\n                  Take Poll\n                </Button>\n              </div>\n            </Row>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Unansweredq);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Question from \"./Question\";\nimport Unansweredq from \"./Unansweredq\";\nimport { Tabs, Tab } from \"react-bootstrap\";\n\nfunction mapStateToProps({ authedUser, questions }) {\n  return {\n    //unanswered questions by filtering through the questions that don't include the\n    //authedUser ID in the votes array of optionOne and OptionTwo, and then sorting them\n    unansQs: Object.keys(questions)\n      .filter(\n        (q) =>\n          !questions[q].optionOne.votes.includes(authedUser) &&\n          !questions[q].optionTwo.votes.includes(authedUser)\n      )\n      .sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n\n    //answered questions by filtering through the questions that does have the\n    //authedUser ID in the votes array of optionOne or OptionTwo, and then sorting them\n    ansQs: Object.keys(questions)\n      .filter(\n        (q) =>\n          questions[q].optionOne.votes.includes(authedUser) ||\n          questions[q].optionTwo.votes.includes(authedUser)\n      )\n      .sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n  };\n}\n\nclass Home extends Component {\n  render() {\n    const { unansQs, ansQs } = this.props;\n\n    // console.log('unanswered: ', unansQs)\n    // console.log('answered: ', ansQs)\n\n    return (\n      <Tabs\n        fill\n        defaultActiveKey=\"unanswered\"\n        style={{ marginTop: \"5px\", fontSize: \"20px\" }}\n      >\n        <Tab eventKey=\"unanswered\" title=\"Unanswered Polls\">\n          {unansQs.map((id) => (\n            <div key={id}>\n              <Unansweredq id={id} />\n            </div>\n          ))}\n        </Tab>\n        <Tab eventKey=\"answered\" title=\"Answered Polls\">\n          {ansQs.map((id) => (\n            <div key={id}>\n              <Question id={id} />\n            </div>\n          ))}\n        </Tab>\n      </Tabs>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeAuthedUser } from \"../actions/authedUser\";\nimport { Navbar, Nav, Image, Button } from \"react-bootstrap\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nfunction mapStateToProps({ authedUser, users }) {\n  return {\n    name: users[authedUser].name,\n    avatar: users[authedUser].avatarURL,\n  };\n}\n\nclass Navig extends Component {\n  logOut = () => {\n    const { dispatch } = this.props;\n    dispatch(removeAuthedUser());\n    this.props.history.push(\"/\");\n  }; //when user logout, they'll be redirected to the loginpage\n\n  render() {\n    const { name, avatar } = this.props;\n    // console.log(\"Nav Data: \", this.props);\n    // console.log(this.props.history.location.pathname)\n\n    //to match and highlight the navbar item with the url\n    const location = this.props.history.location.pathname;\n\n    return (\n      <Navbar\n        id=\"navig\"\n        bg=\"primary\"\n        variant=\"dark\"\n        style={{ marginTop: \"5px\", height: \"65px\" }}\n      >\n        <Navbar.Brand style={{ fontSize: \"30px\" }}>\n          <Image\n            src={avatar}\n            style={{\n              width: \"60px\",\n              height: \"60px\",\n              marginLeft: \"40px\",\n              marginRight: \"10px\",\n            }}\n            roundedCircle\n          />\n          {`Hi, ${name}!`}\n        </Navbar.Brand>\n        <Nav\n          className=\"text-center m-auto\"\n          style={{ fontSize: \"25px\" }}\n          activeKey={\n            location === \"/home\" || location === \"/\"\n              ? \"/home\"\n              : location === \"/add\"\n              ? \"/add\"\n              : location === \"/leaderboard\"\n              ? \"/leaderboard\"\n              : \"/home\"\n          }\n        >\n          <Nav.Link as={NavLink} to=\"/home\" style={{ marginRight: \"50px\" }}>\n            Home\n          </Nav.Link>\n          <Nav.Link as={NavLink} to=\"/add\" style={{ marginRight: \"50px\" }}>\n            Add Poll\n          </Nav.Link>\n          <Nav.Link\n            as={NavLink}\n            to=\"/leaderboard\"\n            style={{ marginRight: \"50px\" }}\n          >\n            Leaderboard\n          </Nav.Link>\n        </Nav>\n        <Button\n          onClick={this.logOut}\n          style={{ fontSize: \"18px\", marginRight: \"40px\" }}\n        >\n          Logout\n        </Button>\n      </Navbar>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(withRouter(Navig));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddQuestion } from \"../actions/questions\";\nimport { Card, Button, Form } from \"react-bootstrap\";\n\nclass Addq extends Component {\n  //state starting empty\n  state = {\n    optionOne: \"\",\n    optionTwo: \"\",\n  };\n\n  //updating options in the state\n  changeOptionOne = (e) => {\n    const optionOne = e.target.value;\n    this.setState(() => ({\n      optionOne,\n    }));\n  };\n\n  changeOptionTwo = (e) => {\n    const optionTwo = e.target.value;\n    this.setState(() => ({\n      optionTwo,\n    }));\n  };\n\n  submitPoll = (e) => {\n    e.preventDefault();\n\n    const { optionOne, optionTwo } = this.state;\n    const { dispatch } = this.props;\n\n    //console.log(\"The poll is: \", this.state);\n\n    //adding the 2 options to the store\n    dispatch(handleAddQuestion(optionOne, optionTwo));\n    // alert('Your poll has been submitted!')\n    this.props.history.push(\"/home\");\n  };\n\n  render() {\n    const { optionOne, optionTwo } = this.state;\n\n    return (\n      <div style={{ marginTop: \"30px\" }}>\n        <Card className=\"m-auto\" style={{ width: \"30rem\" }}>\n          <Card.Header\n            className=\"text-center\"\n            style={{ fontSize: \"18px\", fontWeight: \"bold\" }}\n          >\n            Add a poll question\n          </Card.Header>\n          <Card.Body>\n            <Card.Text style={{ marginTop: \"30px\" }}>\n              Would you rather\n            </Card.Text>\n            <Form>\n              <Form.Group className=\"mb-3\" controlId=\"optionOne\">\n                <Form.Control\n                  placeholder=\"Option One\"\n                  value={optionOne}\n                  onChange={this.changeOptionOne}\n                />\n              </Form.Group>\n              <Card.Text>Or</Card.Text>\n              <Form.Group className=\"mb-3\" controlId=\"optionTwo\">\n                <Form.Control\n                  placeholder=\"Option Two\"\n                  value={optionTwo}\n                  onChange={this.changeOptionTwo}\n                />\n              </Form.Group>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Button\n                  variant=\"danger\"\n                  onClick={this.submitPoll}\n                  disabled={optionOne === \"\" || optionTwo === \"\"}\n                >\n                  Submit\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Addq);\n//we used connect to get access to dispatch, we didn't pass any props as we don't need any\n//we just created a local state that only this comp will have access to\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Card,\n  ListGroup,\n  Badge,\n  Image,\n  Button,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\n//getting users info and sorting them according to score\nfunction mapStateToProps({ authedUser, users }) {\n  const usersList = Object.values(users)\n    .map((user) => ({\n      id: user.id,\n      name: user.name,\n      avatar: user.avatarURL,\n      numberAsked: user.questions.length,\n      numberAnswered: Object.keys(user.answers).length,\n      score: user.questions.length + Object.keys(user.answers).length,\n    }))\n    .sort((a, b) => b.score - a.score);\n  return {\n    authedUser,\n    usersList,\n  };\n}\n\nclass Leaderboard extends Component {\n  //to show detailed score(number of questions added and taken)\n  state = { showDetails: false };\n\n  render() {\n    const { authedUser, usersList } = this.props;\n    // console.log(\"Leaderboard Data: \", this.props);\n\n    const { showDetails } = this.state;\n\n    return (\n      <div style={{ marginTop: \"30px\" }}>\n        <Card style={{ width: \"30rem\" }} className=\"m-auto\">\n          <Card.Header\n            className=\"text-center\"\n            style={{ fontSize: \"23px\", fontWeight: \"bold\" }}\n          >\n            <Row\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              Leaderboard\n            </Row>\n            <Row>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginTop: \"10px\",\n                }}\n              >\n                <Button\n                  variant=\"secondary\"\n                  type=\"button\"\n                  onClick={() => this.setState({ showDetails: !showDetails })}\n                >\n                  {showDetails ? \"Hide\" : \"Show\"} Detailed Scores\n                </Button>\n              </div>\n            </Row>\n          </Card.Header>\n          <ListGroup variant=\"flush\">\n            {usersList.map((user, index) => (\n              <ListGroup.Item\n                key={user.id}\n                style={{\n                  marginTop: \"10px\",\n                  backgroundColor: authedUser === user.id ? \"#dae2e8\" : null,\n                }}\n              >\n                {index === 0 ? (\n                  <Row>\n                    <Col>\n                      <Badge\n                        pill\n                        id=\"badge\"\n                        bg=\"warning\"\n                        style={{\n                          fontSize: \"17px\",\n                          fontWeight: \"bold\",\n                          marginRight: \"10px\",\n                          width: \"53px\",\n                        }}\n                      >\n                        1st\n                      </Badge>\n                    </Col>\n                  </Row>\n                ) : index === 1 ? (\n                  <Row>\n                    <Col>\n                      <Badge\n                        pill\n                        bg=\"secondary\"\n                        style={{\n                          fontSize: \"17px\",\n                          fontWeight: \"bold\",\n                          marginRight: \"10px\",\n                        }}\n                      >\n                        2nd\n                      </Badge>\n                    </Col>\n                  </Row>\n                ) : index === 2 ? (\n                  <Row>\n                    <Col>\n                      <Badge\n                        pill\n                        bg=\"danger\"\n                        style={{\n                          fontSize: \"17px\",\n                          fontWeight: \"bold\",\n                          marginRight: \"10px\",\n                        }}\n                      >\n                        3rd\n                      </Badge>\n                    </Col>\n                  </Row>\n                ) : null}\n\n                <Row>\n                  <div id=\"badge\"></div>\n                  <Col md=\"auto\">\n                    <Image\n                      rounded\n                      src={user.avatar}\n                      alt={`Avatar of ${user.name}`}\n                      width=\"90\"\n                      height=\"90\"\n                      style={{ marginBottom: \"20px\", marginLeft: \"20px\" }}\n                    />\n                  </Col>\n                  <Col></Col>\n                  <Col\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      marginRight: \"30px\",\n                    }}\n                  >\n                    <Card\n                      style={{\n                        backgroundColor: \"#b8c3d1\",\n                        fontSize: \"30px\",\n                        fontWeight: \"bold\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <Card.Header style={{ fontSize: \"25px\" }}>\n                        Score\n                      </Card.Header>\n                      {user.score}\n                    </Card>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Card.Title style={{ marginLeft: \"20px\" }}>\n                      {user.name}\n                    </Card.Title>\n                  </Col>\n                  <Col md=\"auto\"></Col>\n\n                  {showDetails ? (\n                    <div>\n                      <Card\n                        style={{\n                          backgroundColor: \"#b8c3d1\",\n                          marginTop: \"10px\",\n                        }}\n                      >\n                        <Card.Header\n                          className=\"text-center\"\n                          style={{ fontSize: \"17px\", fontWeight: \"bold\" }}\n                        >\n                          Detailed Score\n                        </Card.Header>\n                        <Card.Title\n                          style={{ marginLeft: \"5px\", marginTop: \"5px\" }}\n                        >\n                          Polls Added: {user.numberAsked}\n                        </Card.Title>\n                        <Card.Title style={{ marginLeft: \"5px\" }}>\n                          Polls Taken: {user.numberAnswered}\n                        </Card.Title>\n                      </Card>\n                    </div>\n                  ) : null}\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Leaderboard);\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Error extends Component {\n  componentDidMount() {\n    //to hide Navig compoenent on error page\n    document.getElementById(\"navig\").style.display = \"none\";\n  }\n\n  componentWillUnmount() {\n    document.getElementById(\"navig\").style.display = \"flex\";\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div style={{ backgroundColor: \"#f7faf8\" }}>\n        <img\n          src=\"/error.png\"\n          alt=\"pageNotFound\"\n          style={{\n            width: \"70%\",\n            height: \"85vh\",\n            display: \"flex\",\n            margin: \"auto\",\n          }}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button as={NavLink} to=\"/home\">\n            Go Home\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Error;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddAnswer } from \"../actions/questions\";\nimport {\n  Card,\n  Button,\n  Row,\n  Col,\n  Form,\n  Badge,\n  ProgressBar,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { formatQuestion } from \"../utils/helpers\";\nimport Error from \"./Error\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction mapStateToProps({ authedUser, questions, users }, { match }) {\n  const id = match.params.question_id; //to render the question id in the url\n  const question = questions[id];\n  const error = question === undefined;\n\n  //if user entered a wrong url, we catch the error in order not to break the code\n  if (error) {\n    return {\n      error,\n    };\n  }\n\n  return {\n    authedUser,\n    question: formatQuestion(question, users[question.author], authedUser),\n  };\n}\n\nclass Vote extends Component {\n  state = { answer: \"\" };\n\n  chooseOption = (e) => {\n    this.setState({ answer: e.target.value });\n    // console.log(this.state.answer);\n  };\n\n  submitVote = (e) => {\n    e.preventDefault();\n\n    const { dispatch, authedUser, question } = this.props;\n    const { answer } = this.state;\n\n    dispatch(\n      handleAddAnswer({\n        authedUser,\n        qid: question.id,\n        answer: answer,\n      })\n    );\n  };\n\n  render() {\n    const { authedUser, question, error } = this.props;\n\n    //if user entered an non-existent url, redirect to error page\n    if (error) {\n      return <Error />;\n    }\n\n    //destructuring\n    const {\n      name,\n      avatar,\n      optionOne,\n      optionTwo,\n      votesOne,\n      votesTwo,\n      userVoteOne,\n      userVoteTwo,\n      totalVotes,\n    } = question;\n\n    const voteOnePer = ((votesOne / totalVotes) * 100).toFixed(1);\n    const voteTwoPer = ((votesTwo / totalVotes) * 100).toFixed(1);\n    // console.log('Per: ', voteOnePer, voteTwoPer)\n    const { answer } = this.state;\n\n    //console.log(\"Vote data: \", this.props);\n\n    //checking the user vote to either return a poll details page and\n    //highlight the option selected or return the voting page\n    let userVote = \"\";\n    if (userVoteOne.includes(authedUser)) {\n      userVote = \"optionOne\";\n    } else if (userVoteTwo.includes(authedUser)) {\n      userVote = \"optionTwo\";\n    }\n\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        Go Back\n      </Tooltip>\n    );\n\n    return (\n      <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n        <Card style={{ width: \"40rem\" }} border=\"primary\" className=\"m-auto\">\n          <Card.Body>\n            <Row className=\"align-items-center justify-content-md-center\">\n              <Col md=\"auto\" style={{ marginLeft: \"20px\" }}>\n                <img\n                  src={avatar}\n                  alt={`Avatar of ${name}`}\n                  width=\"90\"\n                  height=\"90\"\n                  style={{ marginBottom: \"20px\" }}\n                />\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  {name} is asking:\n                </Card.Subtitle>\n              </Col>\n              <Col style={{ marginLeft: \"20px\" }}>\n                <Card.Title\n                  style={{ marginTop: \"5px\", fontSize: \"25px\" }}\n                  className=\"mb-2\"\n                >\n                  Would your rather\n                </Card.Title>\n                {!userVoteOne.includes(authedUser) &&\n                !userVoteTwo.includes(authedUser) ? (\n                  <div>\n                    <Form\n                      onSubmit={this.submitVote}\n                      style={{ marginTop: \"40px\", marginLeft: \"50px\" }}\n                    >\n                      <Form.Check\n                        onChange={this.chooseOption}\n                        type=\"radio\"\n                        label={optionOne}\n                        value=\"optionOne\"\n                        name=\"vote\"\n                        style={{ marginTop: \"40px\", fontSize: \"20px\" }}\n                      />\n                      <div style={{ fontSize: \"19px\", marginTop: \"20px\" }}>\n                        Or\n                      </div>\n                      <Form.Check\n                        onChange={this.chooseOption}\n                        type=\"radio\"\n                        label={optionTwo}\n                        value=\"optionTwo\"\n                        name=\"vote\"\n                        style={{ marginTop: \"20px\", fontSize: \"20px\" }}\n                      />\n                      <Button\n                        type=\"submit\"\n                        variant=\"danger\"\n                        style={{ marginTop: \"60px\" }}\n                        disabled={answer === \"\"}\n                        onClick={this.showResult}\n                      >\n                        Vote\n                      </Button>\n                    </Form>\n                  </div>\n                ) : (\n                  <div>\n                    <div\n                      style={{\n                        fontSize: \"20px\",\n                        fontWeight: \"bold\",\n                        border: \"2px solid blue\",\n                        borderRadius: \"5px\",\n                        marginTop: \"20px\",\n                        paddingLeft: \"5px\",\n                        backgroundColor:\n                          userVote === \"optionOne\" ? \"#fcdf5b\" : \"white\",\n                      }}\n                    >\n                      {optionOne}\n                      {userVote === \"optionOne\" ? (\n                        <Badge pill bg=\"danger\" style={{ marginLeft: \"10px\" }}>\n                          Your Choice\n                        </Badge>\n                      ) : null}\n                      <ProgressBar\n                        striped\n                        style={{ height: \"20px\", margin: \"5px\" }}\n                        variant=\"primary\"\n                        now={votesOne}\n                        label={`${voteOnePer}%`}\n                        max={totalVotes}\n                      ></ProgressBar>\n                      <span\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        {votesOne} out of {totalVotes}\n                      </span>\n                    </div>\n                    <div\n                      style={{\n                        fontSize: \"20px\",\n                        fontWeight: \"bold\",\n                        border: \"2px solid blue\",\n                        borderRadius: \"5px\",\n                        marginTop: \"15px\",\n                        paddingLeft: \"5px\",\n                        backgroundColor:\n                          userVote === \"optionTwo\" ? \"#fcdf5b\" : \"white\",\n                      }}\n                    >\n                      {optionTwo}\n                      {userVote === \"optionTwo\" ? (\n                        <Badge pill bg=\"danger\" style={{ marginLeft: \"10px\" }}>\n                          Your Choice\n                        </Badge>\n                      ) : null}\n                      <ProgressBar\n                        striped\n                        style={{ height: \"20px\", margin: \"5px\" }}\n                        variant=\"primary\"\n                        now={votesTwo}\n                        label={`${voteTwoPer}%`}\n                        max={totalVotes}\n                      ></ProgressBar>\n                      <span\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        {votesTwo} out of {totalVotes}\n                      </span>\n                    </div>\n                  </div>\n                )}\n              </Col>\n            </Row>\n            <OverlayTrigger\n              placement=\"left\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={renderTooltip}\n            >\n              <Button as={NavLink} to=\"/home\">\n                &#10094;\n              </Button>\n            </OverlayTrigger>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Vote);\n","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nconst MyLoader = () => (\n  <ContentLoader \n    speed={2}\n    width={1360}\n    height={500}\n    viewBox=\"0 0 1360 500\"\n    backgroundColor=\"#bfbfbf\"\n    foregroundColor=\"#a6a2a2\"\n    // {...props}\n  >\n    <rect x=\"2\" y=\"1\" rx=\"3\" ry=\"3\" width=\"1360\" height=\"70\" /> \n    <rect x=\"574\" y=\"450\" rx=\"3\" ry=\"3\" width=\"223\" height=\"50\" /> \n    <rect x=\"500\" y=\"100\" rx=\"0\" ry=\"0\" width=\"400\" height=\"300\" />\n  </ContentLoader>\n)\n\nexport default MyLoader\n\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { handleInitialData } from \"../actions/shared\";\nimport Auth from \"./Auth\";\nimport Home from \"./Home\";\nimport Navig from \"./Navig\";\nimport Addq from \"./Addq\";\nimport Leaderboard from \"./Leaderboard\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport LoadingBar from \"react-redux-loading\";\nimport Vote from \"./Vote\";\nimport Error from \"./Error\";\nimport Skeleton from './Skeleton'\n\nfunction mapStateToProps({ authedUser, users }) {\n  return {\n    authedUser,\n    loading: users === null, // to render login pg after we get users\n  };\n}\n\nclass App extends Component {\n\n  state = { isLoading : true}  //set a loading state\n\n  //when this comp mounts we dispatch handleInitiaData to get the data\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.dispatch(handleInitialData());\n      this.setState ({ isLoading : false})\n    },5000)\n    \n  } \n\n  render() {\n    const { authedUser, loading } = this.props;\n    return (\n      <div>\n        {/* <LoadingBar /> */}\n        {this.state.isLoading === true \n        ? <Skeleton/>   \n        : ( \n          <div>\n            {!authedUser ? (\n              <Auth />\n            ) : (\n              <Fragment>\n                <Navig />\n                <Switch>\n                  <Route path=\"/home\" component={Home} />\n                  <Route path=\"/add\" component={Addq} />\n                  <Route path=\"/leaderboard\" component={Leaderboard} />\n                  <Route path=\"/questions/:question_id\" component={Vote} />\n                  <Route component={Error} />\n                </Switch>\n              </Fragment>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n//Using the connect() function upgrades a component to a container.\n//Containers can read state from the store and dispatch actions.\n","import { combineReducers } from \"redux\";\nimport authedUser from \"./authedUser\";\nimport users from \"./users\";\nimport questions from \"./questions\";\nimport { loadingBarReducer } from \"react-redux-loading\";\n\n//combining reducers cuz createStore func can only have one root reducer\nexport default combineReducers({\n  authedUser,\n  users,\n  questions,\n  loadingBar: loadingBarReducer,\n});\n","import { SET_AUTHED_USER, REMOVE_AUTHED_USER } from \"../actions/authedUser\";\n\nexport default function authedUser(state = null, action) {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      return action.id;\n    case REMOVE_AUTHED_USER:\n      return null;\n    default:\n      return state;\n  }\n}\n","import { GET_USERS } from \"../actions/users\";\nimport { ADD_QUESTION, ADD_ANSWER } from \"../actions/questions\";\n\nexport default function users(state = {}, action) {\n  switch (action.type) {\n    case GET_USERS:\n      return {\n        ...state, //slice of the state\n        ...action.users, //all users we gettign from the action\n      };\n    case ADD_QUESTION:\n      return {\n        ...state, //slice of the state\n        [action.question.author]: {\n          //updating that slice of state\n          ...state[action.question.author],\n          questions: state[action.question.author].questions.concat([\n            action.question.id,\n          ]),\n        },\n      };\n    case ADD_ANSWER:\n      return {\n        ...state,\n        [action.authedUser]: {\n          ...state[action.authedUser],\n          answers: {\n            ...state[action.authedUser].answers,\n            [action.qid]: action.answer,\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_QUESTIONS, ADD_QUESTION, ADD_ANSWER } from \"../actions/questions\";\n\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case GET_QUESTIONS:\n      return {\n        ...state, //return our slice on the state\n        ...action.questions, //merging questions with state\n      };\n    case ADD_QUESTION:\n      return {\n        ...state,\n        [action.question.id]: action.question,\n      };\n    case ADD_ANSWER:\n      return {\n        ...state, //slice of the state\n        [action.qid]: {\n          //updating that slice of state\n          ...state[action.qid],\n          [action.answer]: {\n            ...state[action.qid][action.answer],\n            votes: state[action.qid][action.answer].votes.concat([\n              action.authedUser,\n            ]),\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n","const logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.log(\"The action: \", action);\n  const returnValue = next(action); //next will be dispatch\n  console.log(\"The new state: \", store.getState());\n  console.groupEnd();\n  return returnValue;\n};\n\nexport default logger;\n","import thunk from \"redux-thunk\";\nimport logger from \"./logger\";\nimport { applyMiddleware } from \"redux\";\n\nexport default applyMiddleware(thunk, logger);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport middleware from \"./middleware\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}